apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  annotations:
    meta.helm.sh/release-name: monitoring-stack
    meta.helm.sh/release-namespace: default
  labels:
    app: kube-prometheus-stack
    app.kubernetes.io/instance: monitoring-stack
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kube-prometheus-stack
    app.kubernetes.io/version: 56.21.1
    chart: kube-prometheus-stack-56.21.1
    heritage: Helm
    release: monitoring-stack
  name: mywebsite-slo-rules
  namespace: default
spec:

  groups:
  - name: sloth-slo-sli-recordings-mywebsite-slo-requests-availability
    rules:
    - record: slo:sli_error:ratio_rate5m
      expr: |
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx",code=~"(5..)"}[5m])))
        /
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx"}[5m])))
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_window: 5m
        tier: "2"
    - record: slo:sli_error:ratio_rate30m
      expr: |
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx",code=~"(5..)"}[30m])))
        /
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx"}[30m])))
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_window: 30m
        tier: "2"
    - record: slo:sli_error:ratio_rate1h
      expr: |
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx",code=~"(5..)"}[1h])))
        /
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx"}[1h])))
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_window: 1h
        tier: "2"
    - record: slo:sli_error:ratio_rate2h
      expr: |
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx",code=~"(5..)"}[2h])))
        /
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx"}[2h])))
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_window: 2h
        tier: "2"
    - record: slo:sli_error:ratio_rate6h
      expr: |
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx",code=~"(5..)"}[6h])))
        /
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx"}[6h])))
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_window: 6h
        tier: "2"
    - record: slo:sli_error:ratio_rate1d
      expr: |
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx",code=~"(5..)"}[1d])))
        /
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx"}[1d])))
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_window: 1d
        tier: "2"
    - record: slo:sli_error:ratio_rate3d
      expr: |
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx",code=~"(5..)"}[3d])))
        /
        (sum(rate(promhttp_metric_handler_requests_total{job="nginx"}[3d])))
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_window: 3d
        tier: "2"
    - record: slo:sli_error:ratio_rate30d
      expr: |
        sum_over_time(slo:sli_error:ratio_rate5m{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"}[30d])
        / ignoring (sloth_window)
        count_over_time(slo:sli_error:ratio_rate5m{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"}[30d])
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_window: 30d
        tier: "2"
  - name: sloth-slo-meta-recordings-mywebsite-slo-requests-availability
    rules:
    - record: slo:objective:ratio
      expr: vector(0.995)
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        tier: "2"
    - record: slo:error_budget:ratio
      expr: vector(1-0.995)
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        tier: "2"
    - record: slo:time_period:days
      expr: vector(30)
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        tier: "2"
    - record: slo:current_burn_rate:ratio
      expr: |
        slo:sli_error:ratio_rate5m{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"}
        / on(sloth_id, sloth_slo, sloth_service) group_left
        slo:error_budget:ratio{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"}
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        tier: "2"
    - record: slo:period_burn_rate:ratio
      expr: |
        slo:sli_error:ratio_rate30d{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"}
        / on(sloth_id, sloth_slo, sloth_service) group_left
        slo:error_budget:ratio{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"}
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        tier: "2"
    - record: slo:period_error_budget_remaining:ratio
      expr: 1 - slo:period_burn_rate:ratio{sloth_id="mywebsite-slo-requests-availability",
        sloth_service="mywebsite-slo", sloth_slo="requests-availability"}
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        tier: "2"
    - record: sloth_slo_info
      expr: vector(1)
      labels:
        owner: devopsteam
        repo: myorg/myservice
        sloth_id: mywebsite-slo-requests-availability
        sloth_mode: cli-gen-prom
        sloth_objective: "99.5"
        sloth_service: mywebsite-slo
        sloth_slo: requests-availability
        sloth_spec: prometheus/v1
        sloth_version: v0.11.0
        tier: "2"
  - name: sloth-slo-alerts-mywebsite-slo-requests-availability
    rules:
    - alert: MyWebsiteHighErrorRate
      expr: |
        (
            max(slo:sli_error:ratio_rate5m{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"} > (14.4 * 0.005)) without (sloth_window)
            and
            max(slo:sli_error:ratio_rate1h{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"} > (14.4 * 0.005)) without (sloth_window)
        )
        or
        (
            max(slo:sli_error:ratio_rate30m{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"} > (6 * 0.005)) without (sloth_window)
            and
            max(slo:sli_error:ratio_rate6h{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"} > (6 * 0.005)) without (sloth_window)
        )
      labels:
        category: availability
        routing_key: myteam
        severity: pageteam
        sloth_severity: page
      annotations:
        summary: High error rate on 'mywebsite' requests responses
        title: (page) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget
          burn rate is too fast.
    - alert: MyWebsiteHighErrorRate
      expr: |
        (
            max(slo:sli_error:ratio_rate2h{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"} > (3 * 0.005)) without (sloth_window)
            and
            max(slo:sli_error:ratio_rate1d{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"} > (3 * 0.005)) without (sloth_window)
        )
        or
        (
            max(slo:sli_error:ratio_rate6h{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"} > (1 * 0.005)) without (sloth_window)
            and
            max(slo:sli_error:ratio_rate3d{sloth_id="mywebsite-slo-requests-availability", sloth_service="mywebsite-slo", sloth_slo="requests-availability"} > (1 * 0.005)) without (sloth_window)
        )
      labels:
        category: availability
        severity: slack
        slack_channel: '#alerts-myteam'
        sloth_severity: ticket
      annotations:
        summary: High error rate on 'mywebsite' requests responses
        title: (ticket) {{$labels.sloth_service}} {{$labels.sloth_slo}} SLO error budget
          burn rate is too fast.
