# This is a basic workflow to help you get started with Actions

name: CI for coit-frontend

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  sonarscannerversion: 4.7.0.2747-linux
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    # Add your cluster name here.
  GKE_ZONE: asia-south1-a   # Add your cluster zone here.

jobs:
  buildandpush:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup Sonar-Scanner  
        run: |
          wget "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$sonarscannerversion.zip"
          unzip sonar-scanner-cli-$sonarscannerversion.zip -d $HOME/sonarqube
          chmod 755 $HOME/sonarqube/sonar-scanner-$sonarscannerversion/bin/sonar-scanner

      - name: Scan the project
        env: 
          sonarqube_project: ${{ secrets.SONARQUBE_PROJECT }} 
          api_key: ${{ secrets.API_KEY }}
          sonarqube_url: ${{ secrets.SONARQUBE_URL }}
        run: |
          cd coit-frontend 
          $HOME/sonarqube/sonar-scanner-$sonarscannerversion/bin/sonar-scanner  \
            -Dsonar.projectKey=$sonarqube_project \
            -Dsonar.sources=. \
            -Dsonar.host.url=$sonarqube_url \
            -Dsonar.login=$api_key 

      - name: Run Unit Tests
        run: | 
          cd coit-frontend
          npm test || true

      - name: Check the Vulnaribilities of Dependencies 
        run: | 
          cd coit-frontend
          npm audit || true

      - name: Docker Login
        env:
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKERHUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD

      - name: Build the container Image
        run: | 
          docker build coit-frontend -t coitlearning/coit-frontend:latest -f coit-frontend/Dockerfile-multistage

      - name: Push the container Image
        run: | 
          docker push coitlearning/coit-frontend:latest

      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Deploy the GKE Cluster 
        run: | 
          cd kustomize/environments/preview
          kubectl apply -k .
